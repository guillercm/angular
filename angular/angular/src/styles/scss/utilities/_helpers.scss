// Clases helper
@use "sass:string";
@use "sass:map";
@use '../bootstrap';


$custom-classes: (
  "width-rem": (property: width,
    unit: rem,
    class: w-rem,
    values: (5, 6, 15, 18),
  ),
  "height-rem": (property: height,
    unit: rem,
    class: h-rem,
    values: (1, 6),
  ),
  "max-height-rem": (property: max-height,
    unit: rem,
    class: mh-rem,
    values: (25, 20, 25),
  ),
  "cursor": (property: cursor,
    class: cursor,
    values: (pointer, progress)),
  "animation-fill-mode": (property: animation-fill-mode,
    class: animation-fill-mode,
    values: (forwards),
  ),
  "animate": (property: animation,
    class: animate,
    values: (fadeIn: string.unquote('fadeIn 1s ease-in-out'), fadeOut: string.unquote('fadeOut forwards 2s')),
  ),
  "opacity": (property: opacity,
    class: opacity-hover,
    state: hover,
    important: true,
    values: (0: 0,
      25: .25,
      50: .50,
      75: .75,
      100: 1)),
  "height": (property: height,
    unit: vh,
    class: vh,
    breakpoints: (lg, xl, xxl),
    values: (100))
);


@each $key, $config in $custom-classes {
  $property: map.get($config, property);
  $unit: map.get($config, unit);
  $class: map.get($config, class);
  $state: if(map.has-key($config, state), ':' + map.get($config, state), '');
  $important: if(map.has-key($config, important), map.get($config, important), true);
  $values: map.get($config, values);
  $breakpoints: if(map.has-key($config, breakpoints), map.get($config, breakpoints), ());

  @each $value, $output in $values {
    .#{$class}-#{$value} #{$state} {
      #{$property}: #{if($output, $output, $value)}#{$unit}#{if($important, ' !important', '')};
    }
  }

  @each $breakpoint in $breakpoints {
    @include bootstrap.media-breakpoint-only($breakpoint) {
      @each $value, $output in $values {
        .#{$class}-#{$breakpoint}-#{$value}#{$state} {
          #{$property}: #{if($output, $output, $value)}#{$unit}#{if($important, ' !important', '')};
        }
      }
    }
  }
}
